{"version":3,"sources":["Calendar/Contracts.ts"],"names":[],"mappings":";IA8LC","file":"Calendar/Contracts.js","sourcesContent":["/**\r\n* Interface for a calendar event provider\r\n*/\r\nexport interface IEventSource {\r\n\r\n    /**\r\n    * Unique id of the event source\r\n    */\r\n    id: string;\r\n\r\n    /**\r\n    * Friendly display name of the event source\r\n    */\r\n    name: string;\r\n\r\n    /**\r\n    * Order used in sorting the event sources\r\n    */\r\n    order: number;\r\n\r\n    /**\r\n    * Set to true if events from this source should be rendered in the background.\r\n    */\r\n    background?: boolean;\r\n\r\n    /**\r\n    * Get the events that match a certain criteria\r\n    *\r\n    * @param query Events query\r\n    */\r\n    getEvents: (query?: IEventQuery) => IPromise<CalendarEvent[]>;\r\n\r\n    /**\r\n     * Get the event categories that match a certain criteria\r\n     */\r\n    getCategories(query: IEventQuery): IPromise<IEventCategory[]>;\r\n\r\n    /**\r\n    * Optional method to add events to a given source\r\n    */\r\n    addEvents?: (events: CalendarEvent[]) => IPromise<CalendarEvent[]>;\r\n\r\n    /**\r\n    * Optional method to remove events from this event source\r\n    */\r\n    removeEvents?: (events: CalendarEvent[]) => IPromise<CalendarEvent[]>;\r\n\r\n    /**\r\n    * Optional method to update an event in this event source\r\n    */\r\n    updateEvents?: (events: CalendarEvent[]) => IPromise<CalendarEvent[]>;\r\n}\r\n\r\n/**\r\n * Summary item for events\r\n */\r\nexport interface IEventCategory {\r\n    /**\r\n     * Title of the event category\r\n     */\r\n    title: string;\r\n\r\n    /**\r\n     * Sub title of the event category\r\n     */\r\n    subTitle?: string;\r\n\r\n    /**\r\n     * Image url of this category\r\n     */\r\n    imageUrl?: string;\r\n\r\n    /**\r\n     * Color of this category\r\n     */\r\n    color?: string;\r\n}\r\n\r\n/**\r\n* Query criteria for events\r\n*/\r\nexport interface IEventQuery {\r\n\r\n    /**\r\n    * If specified, only include events on or after the given date\r\n    */\r\n    startDate?: Date;\r\n    \r\n    /**\r\n    * If specified, only include events on or before the given date\r\n    */\r\n    endDate?: Date;\r\n}\r\n\r\n/**\r\n* Represents a single calendar event\r\n*/\r\nexport interface CalendarEvent {\r\n\r\n    /**\r\n    * Title of the event\r\n    */\r\n    title: string;\r\n\r\n    /**\r\n    * Event start date\r\n    */\r\n    startDate: Date;\r\n\r\n    /**\r\n    * Event end date\r\n    */\r\n    endDate?: Date;\r\n\r\n    /**\r\n    * Unique id for the event\r\n    */\r\n    eventId?: string | number;\r\n\r\n    /**\r\n     * Category of the service\r\n     */\r\n    category?: string;\r\n\r\n    /**\r\n     * The member associated with this event\r\n     */\r\n    member?: ICalendarMember;\r\n}\r\n\r\nexport interface ICalendarMember {\r\n    /**\r\n    * Display name of the member\r\n    */\r\n    displayName: string;\r\n\r\n    /**\r\n    * Unique ID for the member\r\n    */\r\n    id: string;\r\n\r\n    /**\r\n    * URL to the identity image for the member\r\n    */\r\n    imageUrl: string;\r\n\r\n    /**\r\n    * Unique name for the member\r\n    */\r\n    uniqueName: string;\r\n\r\n    /**\r\n    * URL for the member\r\n    */\r\n    url: string;\r\n}\r\n\r\n/**\r\n* Represents a single calendar event\r\n*/\r\nexport interface IExtendedCalendarEventObject {\r\n\r\n    color?: string;\r\n    backgroundColor?: string;\r\n    borderColor?: string;\r\n    textColor?: string;\r\n    className?: string|string[];\r\n    editable?: boolean;\r\n    startEditable?: boolean;\r\n    durationEditable?: boolean;\r\n    rendering?: string;\r\n    overlap?: boolean;\r\n    constraint?: string;\r\n    id?: string|number;\r\n    title: string;\r\n    allDay?: boolean;\r\n    start: Date|string;\r\n    end?: Date|string;\r\n    url?: string;\r\n    source?: any | IExtendedCalendarEventSource;\r\n    member?: ICalendarMember;\r\n    category?: string;\r\n    eventType?: string;\r\n}\r\n\r\n/**\r\n* Represents a single calendar event\r\n*/\r\nexport interface IExtendedCalendarEventSource {\r\n    events?: IExtendedCalendarEventObject[] | IEventSource;\r\n}"],"sourceRoot":"/source/"}