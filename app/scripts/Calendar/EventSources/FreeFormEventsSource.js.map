{"version":3,"sources":["Calendar/EventSources/FreeFormEventsSource.ts"],"names":["FreeFormEventsSource","FreeFormEventsSource.constructor","FreeFormEventsSource.getEvents","FreeFormEventsSource.getCategories","FreeFormEventsSource.addEvents","FreeFormEventsSource.removeEvents","FreeFormEventsSource.updateEvents","FreeFormEventsSource._beginGetExtensionSetting","FreeFormEventsSource._beginUpdateExtensionSetting","FreeFormEventsSource._eventsToExtensionSetting","FreeFormEventsSource._extensionSettingToEvents","FreeFormEventsSource._categorizeEvents"],"mappings":"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","file":"Calendar/EventSources/FreeFormEventsSource.js","sourcesContent":["/// <reference path='../../ref/VSS/VSS.d.ts' />\r\n\r\nimport Calendar_Contracts = require(\"Calendar/Contracts\");\r\nimport Calendar_DateUtils = require(\"Calendar/Utils/Date\");\r\nimport Calendar_ColorUtils = require(\"Calendar/Utils/Color\");\r\nimport Contracts_Platform = require(\"VSS/Common/Contracts/Platform\");\r\nimport Contributions_Contracts = require(\"VSS/Contributions/Contracts\");\r\nimport Contributions_RestClient = require(\"VSS/Contributions/RestClient\");\r\nimport Q = require(\"q\");\r\nimport Service = require(\"VSS/Service\");\r\nimport Utils_Core = require(\"VSS/Utils/Core\");\r\nimport Utils_String = require(\"VSS/Utils/String\");\r\nimport WebApi_Constants = require(\"VSS/WebApi/Constants\");\r\n\r\nexport class FreeFormEventsSource implements Calendar_Contracts.IEventSource {\r\n\r\n    public id = \"freeForm\";\r\n    public name = \"Events\";\r\n    public order = 10;\r\n\r\n    private _teamId: string;\r\n    private _events: Calendar_Contracts.CalendarEvent[];\r\n\r\n    constructor() {\r\n        var webContext = VSS.getWebContext();\r\n        this._teamId = webContext.team.id;\r\n    }\r\n\r\n    public getEvents(query?: Calendar_Contracts.IEventQuery): IPromise<Calendar_Contracts.CalendarEvent[]> {\r\n        return this._beginGetExtensionSetting();\r\n    }\r\n\r\n    public getCategories(query?: Calendar_Contracts.IEventQuery): IPromise<Calendar_Contracts.IEventCategory[]> {\r\n        return this.getEvents().then(\r\n            (events: Calendar_Contracts.CalendarEvent[]) => {\r\n                return this._categorizeEvents(events, query);\r\n            });\r\n    }\r\n\r\n    public addEvents(events: Calendar_Contracts.CalendarEvent[]): IPromise<Calendar_Contracts.CalendarEvent[]> {\r\n        var deferred = Q.defer();\r\n        this._beginGetExtensionSetting().then(() => {\r\n            events.forEach((calendarEvent: Calendar_Contracts.CalendarEvent, index: number, array: Calendar_Contracts.CalendarEvent[]) => {\r\n                this._events.push(calendarEvent);\r\n            });\r\n            this._beginUpdateExtensionSetting().then(deferred.resolve, deferred.reject);\r\n\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    public removeEvents(events: Calendar_Contracts.CalendarEvent[]): IPromise<Calendar_Contracts.CalendarEvent[]> {\r\n        var deferred = Q.defer();\r\n        this._beginGetExtensionSetting().then(() => {\r\n            events.forEach((calendarEvent: Calendar_Contracts.CalendarEvent, index: number, array: Calendar_Contracts.CalendarEvent[]) => {\r\n                var eventInArray: Calendar_Contracts.CalendarEvent = $.grep(this._events, function (e) { return e.eventId === calendarEvent.eventId; })[0]; //better check here\r\n                var index = this._events.indexOf(eventInArray);\r\n                if (index > -1) {\r\n                    this._events.splice(index, 1);\r\n                }\r\n            });\r\n            this._beginUpdateExtensionSetting().then(deferred.resolve, deferred.reject);\r\n\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    public updateEvents(events: Calendar_Contracts.CalendarEvent[]): IPromise<Calendar_Contracts.CalendarEvent[]> {\r\n        var deferred = Q.defer();\r\n        this._beginGetExtensionSetting().then(() => {\r\n            events.forEach((calendarEvent: Calendar_Contracts.CalendarEvent, index: number, array: Calendar_Contracts.CalendarEvent[]) => {\r\n                var eventInArray: Calendar_Contracts.CalendarEvent = $.grep(this._events, function (e) { return e.eventId === calendarEvent.eventId; })[0]; //better check here\r\n                var index = this._events.indexOf(eventInArray);\r\n                if (index > -1) {\r\n                    this._events.splice(index, 1, calendarEvent);\r\n                }\r\n            });\r\n            this._beginUpdateExtensionSetting().then(deferred.resolve, deferred.reject);\r\n\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    private _beginGetExtensionSetting(): IPromise<Calendar_Contracts.CalendarEvent[]> {\r\n        var deferred = Q.defer<Calendar_Contracts.CalendarEvent[]>();\r\n        var contributionsClient: Contributions_RestClient.ContributionsHttpClient = Service.VssConnection\r\n            .getConnection(null, Contracts_Platform.ContextHostType.Application)\r\n            .getHttpClient(Contributions_RestClient.ContributionsHttpClient, WebApi_Constants.ServiceInstanceTypes.TFS);\r\n\r\n        contributionsClient.getAppData(VSS.getExtensionContext().id, this._teamId).then(\r\n            (ExtensionSetting: Contributions_Contracts.ExtensionSetting) => {\r\n                this._events = this._extensionSettingToEvents(ExtensionSetting.value);\r\n                deferred.resolve(this._events);\r\n            },\r\n            (e: Error) => {\r\n                deferred.reject(e);\r\n            });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    private _beginUpdateExtensionSetting(): IPromise<Calendar_Contracts.CalendarEvent[]> {\r\n        var deferred = Q.defer();\r\n        var ExtensionSetting = this._eventsToExtensionSetting();\r\n\r\n        var contributionsClient = Service.VssConnection\r\n            .getConnection(null, Contracts_Platform.ContextHostType.Application)\r\n            .getHttpClient(Contributions_RestClient.ContributionsHttpClient, WebApi_Constants.ServiceInstanceTypes.TFS);\r\n\r\n        contributionsClient.updateAppData(ExtensionSetting, VSS.getExtensionContext().id, this._teamId).then(\r\n            (ExtensionSetting: Contributions_Contracts.ExtensionSetting) => {\r\n                this._events = this._extensionSettingToEvents(ExtensionSetting.value);\r\n                deferred.resolve(this._events);\r\n            },\r\n            (e: Error) => {\r\n                deferred.reject(e);\r\n            });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    private _eventsToExtensionSetting(): Contributions_Contracts.ExtensionSetting {\r\n        var ExtensionSettingValue = JSON.stringify({\r\n            'events': this._events\r\n        });\r\n        var ExtensionSetting: Contributions_Contracts.ExtensionSetting = {\r\n            'key': this._teamId,\r\n            'value': ExtensionSettingValue\r\n        };\r\n        return ExtensionSetting;\r\n    }\r\n\r\n    private _extensionSettingToEvents(ExtensionSettingValue: string): Calendar_Contracts.CalendarEvent[] {\r\n        if (ExtensionSettingValue) {\r\n            var json = JSON.parse(ExtensionSettingValue);\r\n            return json.events ? json.events : [];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    private _categorizeEvents(events: Calendar_Contracts.CalendarEvent[], query?: Calendar_Contracts.IEventQuery): Calendar_Contracts.IEventCategory[] {\r\n        var categories: Calendar_Contracts.IEventCategory[] = [];\r\n        var categoryMap: { [name: string]: Calendar_Contracts.IEventCategory } = {};\r\n        var countMap: { [name: string]: number } = {};\r\n        $.each(events || [],(index: number, event: Calendar_Contracts.CalendarEvent) => {\r\n            var name = (event.category || \"uncategorized\").toLocaleLowerCase();\r\n            if (Calendar_DateUtils.eventIn(event, query)) {\r\n                var count = 0;\r\n                if (!categoryMap[name]) {\r\n                    categoryMap[name] = {\r\n                        title: name,\r\n                        subTitle: \"\",\r\n                        color: Calendar_ColorUtils.generateColor(name)\r\n                    };\r\n\r\n                    categories.push(categoryMap[name]);\r\n                    countMap[name] = 0;\r\n                }\r\n\r\n                // Update sub title with the count\r\n                count = countMap[name] + 1;\r\n                if (count === 1) {\r\n                    categoryMap[name].subTitle = event.title;\r\n                }\r\n                else {\r\n                    categoryMap[name].subTitle = Utils_String.format(\"{0} event{1}\", count, count > 1 ? \"s\" : \"\");\r\n                }\r\n                countMap[name] = count;\r\n            }\r\n        });\r\n\r\n        return categories;\r\n    }\r\n}"],"sourceRoot":"/source/"}