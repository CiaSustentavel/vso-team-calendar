{"version":3,"sources":["Calendar/EventSources/VSOCapacityEventSource.ts"],"names":["VSOCapacityEventSource","VSOCapacityEventSource.constructor","VSOCapacityEventSource.getEvents","VSOCapacityEventSource.getCategories","VSOCapacityEventSource.addEvents","VSOCapacityEventSource.removeEvents","VSOCapacityEventSource.updateEvents","VSOCapacityEventSource._getTeamDaysOff","VSOCapacityEventSource._getCapacity","VSOCapacityEventSource._getCategoryData","VSOCapacityEventSource._buildTeamImageUrl"],"mappings":"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","file":"Calendar/EventSources/VSOCapacityEventSource.js","sourcesContent":["/// <reference path='../../ref/VSS/VSS.d.ts' />\r\n\r\nimport Calendar_Contracts = require(\"Calendar/Contracts\");\r\nimport Calendar_DateUtils = require(\"Calendar/Utils/Date\");\r\nimport Q = require(\"q\");\r\nimport Service = require(\"VSS/Service\");\r\nimport TFS_Core_Contracts = require(\"TFS/Core/Contracts\");\r\nimport Utils_Core = require(\"VSS/Utils/Core\");\r\nimport Utils_Date = require(\"VSS/Utils/Date\");\r\nimport Utils_String = require(\"VSS/Utils/String\");\r\nimport WebApi_Constants = require(\"VSS/WebApi/Constants\");\r\nimport Work_Client = require(\"TFS/Work/RestClient\");\r\nimport Work_Contracts = require(\"TFS/Work/Contracts\");\r\n\r\nexport class VSOCapacityEventSource implements Calendar_Contracts.IEventSource {\r\n\r\n    public id = \"daysOff\";\r\n    public name = \"Days off\";\r\n    public order = 30;\r\n    private _events: Calendar_Contracts.CalendarEvent[];\r\n\r\n\r\n    public getEvents(query?: Calendar_Contracts.IEventQuery): IPromise<Calendar_Contracts.CalendarEvent[]> {\r\n\r\n        var result: Calendar_Contracts.CalendarEvent[] = [];\r\n        var deferred = Q.defer<Calendar_Contracts.CalendarEvent[]>();\r\n        var capacityPromises: IPromise<Work_Contracts.TeamMemberCapacity[]>[] = [];\r\n        var iterationTeamDaysOffPromises: IPromise<Work_Contracts.TeamSettingsDaysOff>[] = [];\r\n        this._events = null;\r\n\r\n        var webContext = VSS.getWebContext();\r\n        var teamContext: TFS_Core_Contracts.TeamContext = { projectId: webContext.project.id, teamId: webContext.team.id, project: \"\", team: \"\" };\r\n        var workClient: Work_Client.WorkHttpClient = Service.VssConnection\r\n            .getConnection()\r\n            .getHttpClient(Work_Client.WorkHttpClient, WebApi_Constants.ServiceInstanceTypes.TFS);\r\n\r\n        workClient.getTeamIterations(teamContext).then(\r\n            (iterations: Work_Contracts.TeamSettingsIteration[]) => {\r\n                if (!iterations || iterations.length === 0) {\r\n                    this._events = result;\r\n                    deferred.resolve(result);\r\n                }\r\n                iterations.forEach((iteration: Work_Contracts.TeamSettingsIteration, index: number, array: Work_Contracts.TeamSettingsIteration[]) => {\r\n                    iterationTeamDaysOffPromises.push(workClient.getTeamDaysOff(teamContext, iteration.id));\r\n                    iterationTeamDaysOffPromises[iterationTeamDaysOffPromises.length - 1].then(\r\n                        (teamDaysOff: Work_Contracts.TeamSettingsDaysOff) => {\r\n                            if (teamDaysOff && teamDaysOff.daysOff && teamDaysOff.daysOff.length) {\r\n                                teamDaysOff.daysOff.forEach((daysOffRange: Work_Contracts.DateRange, i: number, array: Work_Contracts.DateRange[]) => {\r\n                                    var event: any = {};\r\n                                    event.startDate = Utils_Date.shiftToUTC(new Date(daysOffRange.start.valueOf()));\r\n                                    event.endDate = Utils_Date.shiftToUTC(new Date(daysOffRange.end.valueOf()));\r\n                                    event.title = \"Team Day Off\";\r\n                                    event.member = {\r\n                                        displayName: webContext.team.name,\r\n                                        id: webContext.team.id,\r\n                                        imageUrl: this._buildTeamImageUrl(webContext.host.uri, webContext.team.id)\r\n                                    };\r\n                                    event.category = \"DaysOff\";\r\n\r\n                                    result.push(event);\r\n                                });\r\n                            }\r\n                        });\r\n\r\n                    capacityPromises.push(workClient.getCapacities(teamContext, iteration.id));\r\n                    capacityPromises[capacityPromises.length - 1].then(\r\n                        (capacities: Work_Contracts.TeamMemberCapacity[]) => {\r\n                            if (capacities && capacities.length) {\r\n                                for (var i = 0, l = capacities.length; i < l; i++) {\r\n                                    var capacity = capacities[i];\r\n                                    capacity.daysOff.forEach((daysOffRange: Work_Contracts.DateRange, i: number, array: Work_Contracts.DateRange[]) => {\r\n                                        var event: any = {};\r\n                                        event.startDate = Utils_Date.shiftToUTC(new Date(daysOffRange.start.valueOf()));\r\n                                        event.endDate = Utils_Date.shiftToUTC(new Date(daysOffRange.end.valueOf()));\r\n                                        event.title = capacity.teamMember.displayName + \" Day Off\";\r\n                                        event.member = capacity.teamMember;\r\n                                        event.category = \"DaysOff\";\r\n\r\n                                        result.push(event);\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            return result;\r\n                        });\r\n\r\n                    Q.all(iterationTeamDaysOffPromises).then(\r\n                        () => {\r\n                            Q.all(capacityPromises).then(\r\n                                () => {\r\n                                    this._events = result;\r\n                                    deferred.resolve(result);\r\n                                });\r\n                        },\r\n                        (e: Error) => {\r\n                            deferred.reject(e);\r\n                        });\r\n                });\r\n            },\r\n            (e: Error) => {\r\n                deferred.reject(e);\r\n            });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    public getCategories(query: Calendar_Contracts.IEventCategory): IPromise<Calendar_Contracts.IEventCategory[]> {\r\n        var deferred = Q.defer<any>();\r\n        if (this._events) {\r\n            deferred.resolve(this._getCategoryData(this._events.slice(0), query));\r\n\r\n        }\r\n        else {\r\n            this.getEvents().then(\r\n                (events: Calendar_Contracts.CalendarEvent[]) => {\r\n                    deferred.resolve(this._getCategoryData(events, query));\r\n                });\r\n        }\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    public addEvents(events: Calendar_Contracts.CalendarEvent[]): IPromise<Calendar_Contracts.CalendarEvent[]> {\r\n        this._events = null;\r\n        var deferred = Q.defer();\r\n        var dayOffStart = events[0].startDate;\r\n        var dayOffEnd = events[0].endDate;\r\n        var isTeam: boolean = events[0].member.displayName === \"Everyone\";\r\n        var memberId: string = events[0].member.id;\r\n        var webContext = VSS.getWebContext();\r\n        var teamContext: TFS_Core_Contracts.TeamContext = { projectId: webContext.project.id, teamId: webContext.team.id, project: \"\", team: \"\" };\r\n        var workClient: Work_Client.WorkHttpClient = Service.VssConnection\r\n            .getConnection()\r\n            .getHttpClient(Work_Client.WorkHttpClient, WebApi_Constants.ServiceInstanceTypes.TFS);\r\n        Calendar_DateUtils.getIterationId(dayOffStart).then((iterationId: string) => {\r\n            if (isTeam) {\r\n                this._getTeamDaysOff(workClient, teamContext, iterationId).then((teamDaysOff: Work_Contracts.TeamSettingsDaysOff) => {\r\n                    var teamDaysOffPatch: Work_Contracts.TeamSettingsDaysOffPatch = { daysOff: teamDaysOff.daysOff };\r\n                    teamDaysOffPatch.daysOff.push({ start: dayOffStart, end: dayOffEnd });\r\n                    workClient.updateTeamDaysOff(teamDaysOffPatch, teamContext, iterationId).then((value: Work_Contracts.TeamSettingsDaysOff) => {\r\n                        deferred.resolve(events[0]);\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this._getCapacity(workClient, teamContext, iterationId, memberId).then((capacity: Work_Contracts.TeamMemberCapacity) => {\r\n                    var capacityPatch: Work_Contracts.CapacityPatch = { activities: capacity.activities, daysOff: capacity.daysOff };\r\n                    capacityPatch.daysOff.push({ start: dayOffStart, end: dayOffEnd });\r\n                    workClient.updateCapacity(capacityPatch, teamContext, iterationId, memberId).then((value: Work_Contracts.TeamMemberCapacity) => {\r\n                        deferred.resolve(events[0]);\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    public removeEvents(events: Calendar_Contracts.CalendarEvent[]): IPromise<Calendar_Contracts.CalendarEvent[]> {\r\n        this._events = null;\r\n        var deferred = Q.defer();\r\n        var dayOffStart = Utils_Date.shiftToUTC(events[0].startDate);\r\n        var memberId = events[0].member.id;\r\n        var isTeam: boolean = events[0].member.uniqueName === undefined;\r\n        var webContext = VSS.getWebContext();\r\n        var teamContext: TFS_Core_Contracts.TeamContext = { projectId: webContext.project.id, teamId: webContext.team.id, project: \"\", team: \"\" };\r\n        var workClient: Work_Client.WorkHttpClient = Service.VssConnection\r\n            .getConnection()\r\n            .getHttpClient(Work_Client.WorkHttpClient, WebApi_Constants.ServiceInstanceTypes.TFS);\r\n        Calendar_DateUtils.getIterationId(dayOffStart).then((iterationId: string) => {\r\n            if (isTeam) {\r\n                this._getTeamDaysOff(workClient, teamContext, iterationId).then((teamDaysOff: Work_Contracts.TeamSettingsDaysOff) => {\r\n                    var teamDaysOffPatch: Work_Contracts.TeamSettingsDaysOffPatch = { daysOff: teamDaysOff.daysOff };\r\n                    teamDaysOffPatch.daysOff.some((dateRange: Work_Contracts.DateRange, index: number, array: Work_Contracts.DateRange[]) => {\r\n                        if (dateRange.start.valueOf() === dayOffStart.valueOf()) {\r\n                            teamDaysOffPatch.daysOff.splice(index, 1);\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    });\r\n                    workClient.updateTeamDaysOff(teamDaysOffPatch, teamContext, iterationId).then((value: Work_Contracts.TeamSettingsDaysOff) => {\r\n                        deferred.resolve(events[0]);\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this._getCapacity(workClient, teamContext, iterationId, memberId).then((capacity: Work_Contracts.TeamMemberCapacity) => {\r\n                    var capacityPatch: Work_Contracts.CapacityPatch = { activities: capacity.activities, daysOff: capacity.daysOff };\r\n                    capacityPatch.daysOff.some((dateRange: Work_Contracts.DateRange, index: number, array: Work_Contracts.DateRange[]) => {\r\n                        if (dateRange.start.valueOf() === dayOffStart.valueOf()) {\r\n                            capacityPatch.daysOff.splice(index, 1);\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    });\r\n                    workClient.updateCapacity(capacityPatch, teamContext, iterationId, memberId).then((value: Work_Contracts.TeamMemberCapacity) => {\r\n                        deferred.resolve(events[0]);\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    public updateEvents(events: Calendar_Contracts.CalendarEvent[]): IPromise<Calendar_Contracts.CalendarEvent[]> {\r\n        this._events = null;\r\n        var deferred = Q.defer();\r\n        var dayOffStart = events[0].startDate;\r\n        var dayOffEnd = events[0].endDate;\r\n        var memberId = events[0].member.id;\r\n        var isTeam: boolean = events[0].member.uniqueName === undefined;\r\n        var webContext = VSS.getWebContext();\r\n        var teamContext: TFS_Core_Contracts.TeamContext = { projectId: webContext.project.id, teamId: webContext.team.id, project: \"\", team: \"\" };\r\n        var workClient: Work_Client.WorkHttpClient = Service.VssConnection\r\n            .getConnection()\r\n            .getHttpClient(Work_Client.WorkHttpClient, WebApi_Constants.ServiceInstanceTypes.TFS);\r\n        Calendar_DateUtils.getIterationId(dayOffStart).then((iterationId: string) => {\r\n            if (isTeam) {\r\n                this._getTeamDaysOff(workClient, teamContext, iterationId).then((teamDaysOff: Work_Contracts.TeamSettingsDaysOff) => {\r\n                    var teamDaysOffPatch: Work_Contracts.TeamSettingsDaysOffPatch = { daysOff: teamDaysOff.daysOff };\r\n                    var updated : boolean = teamDaysOffPatch.daysOff.some((dateRange: Work_Contracts.DateRange, index: number, array: Work_Contracts.DateRange[]) => {\r\n                        if (dateRange.start.valueOf() === dayOffStart.valueOf()) {\r\n                            teamDaysOffPatch.daysOff[index].end = dayOffEnd;\r\n                            return true;\r\n                        }\r\n                        if (dateRange.end.valueOf() === dayOffEnd.valueOf()) {\r\n                            teamDaysOffPatch.daysOff[index].start = dayOffStart;\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    });\r\n                    workClient.updateTeamDaysOff(teamDaysOffPatch, teamContext, iterationId).then((value: Work_Contracts.TeamSettingsDaysOff) => {\r\n                        deferred.resolve(events[0]);\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                this._getCapacity(workClient, teamContext, iterationId, memberId).then((capacity: Work_Contracts.TeamMemberCapacity) => {\r\n                    var capacityPatch: Work_Contracts.CapacityPatch = { activities: capacity.activities, daysOff: capacity.daysOff };\r\n                    capacityPatch.daysOff.some((dateRange: Work_Contracts.DateRange, index: number, array: Work_Contracts.DateRange[]) => {\r\n                        if (dateRange.start.valueOf() === dayOffStart.valueOf()) {\r\n                            capacityPatch.daysOff[index].end = dayOffEnd;\r\n                            return true;\r\n                        }\r\n                        if (dateRange.end.valueOf() === dayOffEnd.valueOf()) {\r\n                            capacityPatch.daysOff[index].start = dayOffStart;\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    });\r\n                    workClient.updateCapacity(capacityPatch, teamContext, iterationId, memberId).then((value: Work_Contracts.TeamMemberCapacity) => {\r\n                        deferred.resolve(events[0]);\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    private _getTeamDaysOff(workClient: Work_Client.WorkHttpClient, teamContext: TFS_Core_Contracts.TeamContext, iterationId): IPromise<Work_Contracts.TeamSettingsDaysOff> {\r\n        var deferred = Q.defer();\r\n        workClient.getTeamDaysOff(teamContext, iterationId).then((value: Work_Contracts.TeamSettingsDaysOff) => {\r\n            deferred.resolve(value);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    private _getCapacity(workClient: Work_Client.WorkHttpClient, teamContext: TFS_Core_Contracts.TeamContext, iterationId, memberId: string): IPromise<Work_Contracts.TeamMemberCapacity> {\r\n        var deferred = Q.defer();\r\n        workClient.getCapacity(teamContext, iterationId, memberId).then((value: Work_Contracts.TeamMemberCapacity) => {\r\n            deferred.resolve(value);\r\n        });\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    private _getCategoryData(events: Calendar_Contracts.CalendarEvent[], query: Calendar_Contracts.IEventQuery): Calendar_Contracts.IEventCategory[] {\r\n        var memberMap: { [id: string]: boolean } = {};\r\n        var categories: Calendar_Contracts.IEventCategory[] = [];\r\n        $.each(events,(index: number, event: Calendar_Contracts.CalendarEvent) => {\r\n            if (Calendar_DateUtils.eventIn(event, query)) {\r\n                var member = <Work_Contracts.Member>(<any>event).member;\r\n                if (!memberMap[member.id]) {\r\n                    memberMap[member.id] = true;\r\n                    categories.push({\r\n                        title: member.displayName,\r\n                        imageUrl: member.imageUrl\r\n                    });\r\n                }\r\n\r\n                // TODO calculate the days off\r\n            }\r\n        });\r\n\r\n        return categories;\r\n    }\r\n\r\n    private _buildTeamImageUrl(hostUri: string, id: string): string {\r\n        return Utils_String.format(\"{0}_api/_common/IdentityImage?id={1}\", hostUri, id);\r\n    }\r\n}"],"sourceRoot":"/source/"}